import{j as t}from"./index-CN83-K4N.js";import{C as a}from"./Container-DmB2OgOA.js";const n={title:"React",banner:"hello",publishedAt:"4 December 1995",author:"Brendan Eich",description:"JavaScript is a versatile, lightweight, and powerful programming language widely used for web development. It enables developers to create dynamic and interactive web applications, from handling user interactions to updating content without reloading the page. As the backbone of modern web technology, JavaScript seamlessly integrates with HTML and CSS, making it an essential skill for any web developer.."},o=({children:i})=>t.jsx(a,{meta:n,children:i});function s(i){const e={h1:"h1",h2:"h2",hr:"hr",p:"p",...i.components};return t.jsxs(t.Fragment,{children:[t.jsx(e.h1,{children:"Basic Questions"}),`
`,t.jsx(e.hr,{}),`
`,t.jsxs("div",{id:"basic",children:[t.jsx(e.h2,{children:"1. What is JavaScript?"}),t.jsx(e.p,{children:"JavaScript is a lightweight, interpreted, or just-in-time compiled programming language used to create dynamic and interactive content on websites. It is a core web technology, alongside HTML and CSS."}),t.jsx(e.h2,{children:"2. What is a variable?"}),t.jsx(e.p,{children:"A variable is a named container that allows you to store data in your code."}),t.jsx(e.h2,{children:"3. What is a function?"}),t.jsx(e.p,{children:"A function is a block of code designed to perform a particular task."}),t.jsx(e.h2,{children:"4. What is a loop?"}),t.jsx(e.p,{children:"A loop is a control flow statement that allows you to repeat a block of code multiple times."}),t.jsx(e.h2,{children:"5. What is a conditional statement?"}),t.jsx(e.p,{children:"A conditional statement is a control flow statement that allows you to execute different code based on a certain condition."}),t.jsx(e.h2,{children:"6. What is a comment?"}),t.jsx(e.p,{children:"A comment is a line of code that is not executed by the computer, but is used to provide additional information or instructions to the code."}),t.jsx(e.h2,{children:"7. What is a data type?"}),t.jsx(e.p,{children:"A data type is a category that defines the type of data a variable can hold."}),t.jsx(e.h2,{children:"8. What is a primitive data type?"}),t.jsx(e.p,{children:"A primitive data type is a basic data type that cannot be broken down into smaller parts."}),t.jsx(e.h2,{children:"9. What is a non-primitive data type?"}),t.jsx(e.p,{children:"A non-primitive data type is a data type that can be broken down into smaller parts."}),t.jsx(e.h2,{children:"10. What is a closure?"}),t.jsx(e.p,{children:"A closure is a combination of a function and the lexical environment within which it was defined."}),t.jsx(e.h2,{children:"11. What is a prototype?"}),t.jsx(e.p,{children:"A prototype is a built-in object that is used to create and manage objects in JavaScript."}),t.jsx(e.h2,{children:"12. What is a constructor function?"}),t.jsx(e.p,{children:"A constructor function is a function that is used to create objects."}),t.jsx(e.h2,{children:"13. What is a class?"}),t.jsx(e.p,{children:"A class is a template for creating objects."}),t.jsx(e.h2,{children:"14. What is a prototype chain?"})]}),`
`,t.jsx(e.h1,{children:"Intermediate Questions"}),`
`,t.jsx(e.hr,{}),`
`,t.jsxs("div",{id:"intermediate",children:[t.jsx(e.h2,{children:"1. What is a callback function?"}),t.jsx(e.p,{children:"A callback function is a function that is passed as an argument to another function and is executed after the completion of that function."}),t.jsx(e.h2,{children:"2. What is a promise?"}),t.jsx(e.p,{children:"A promise is an object that represents the result of an asynchronous operation."}),t.jsx(e.h2,{children:"3. What is a closure?"}),t.jsx(e.p,{children:"A closure is a combination of a function and the lexical environment within which it was defined."}),t.jsx(e.h2,{children:"4. What is a prototype?"}),t.jsx(e.p,{children:"A prototype is a built-in object that is used to create and manage objects in JavaScript."}),t.jsx(e.h2,{children:"5. What is a constructor function?"}),t.jsx(e.p,{children:"A constructor function is a function that is used to create objects."}),t.jsx(e.h2,{children:"6. What is a class?"}),t.jsx(e.p,{children:"A class is a template for creating objects."}),t.jsx(e.h2,{children:"7. What is a prototype chain?"}),t.jsx(e.p,{children:"A prototype chain is a chain of objects that are used to create and manage objects in JavaScript."}),t.jsx(e.h2,{children:"8. What is a generator function?"}),t.jsx(e.p,{children:"A generator function is a function that can yield multiple values over time using the yield keyword. It returns an iterator that can be used to control the flow of function execution."}),t.jsx(e.h2,{children:"9. What is a proxy?"}),t.jsx(e.p,{children:"A proxy is an object that is used to intercept and modify the behavior of another object."}),t.jsx(e.h2,{children:"10. What is a decorator?"}),t.jsx(e.p,{children:"A decorator is a function that is used to modify the behavior of another function or object."})]}),`
`,t.jsx(e.h1,{children:"Advanced Questions"}),`
`,t.jsx(e.hr,{}),`
`,t.jsxs("div",{id:"advanced",children:[t.jsx(e.h2,{children:"1. What is a module?"}),t.jsx(e.p,{children:"A module is a file that contains code (variables, functions, classes) that can be exported and imported by other files to maintain separation of concerns and modularity."}),t.jsx(e.h2,{children:"2. What is a shallow copy?"}),t.jsx(e.p,{children:"A shallow copy copies only the top-level properties of an object or array."}),t.jsx(e.h2,{children:"3. What is a deep copy?"}),t.jsx(e.p,{children:"A deep copy recursively copies all levels of an object or array, including nested objects or arrays."}),t.jsx(e.h2,{children:"4. What is a generator function?"}),t.jsx(e.p,{children:"A generator function is a function that can yield multiple values over time using the yield keyword. It returns an iterator that can be used to control the flow of function execution."}),t.jsx(e.h2,{children:"5. What is a proxy?"}),t.jsx(e.p,{children:"A proxy is an object that is used to intercept and modify the behavior of another object."}),t.jsx(e.h2,{children:"6. What is a decorator?"}),t.jsx(e.p,{children:"A decorator is a function that is used to modify the behavior of another function or object."}),t.jsx(e.h2,{children:"7. What is a closure?"}),t.jsx(e.p,{children:"A closure is a combination of a function and the lexical environment within which it was defined."}),t.jsx(e.h2,{children:"8. What is a prototype?"}),t.jsx(e.p,{children:"A prototype is a built-in object that is used to create and manage objects in JavaScript."}),t.jsx(e.h2,{children:"9. What is a constructor function?"}),t.jsx(e.p,{children:"A constructor function is a function that is used to create objects."}),t.jsx(e.h2,{children:"10. What is a class?"}),t.jsx(e.p,{children:"A class is a template for creating objects."}),t.jsx(e.h2,{children:"11. What is a prototype chain?"}),t.jsx(e.p,{children:"A prototype chain is a chain of objects that are used to create and manage objects in JavaScript."})]})]})}function h(i={}){return t.jsx(o,{...i,children:t.jsx(s,{...i})})}export{h as default,n as meta};
